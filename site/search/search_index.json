{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Reza Sysadmin 2022 | Nomor Soal 4 Untuk mengerjakan soal kita perlu meyiapkan akun Github dahulu, daftar di halaman https://github.com/signup sampai berhasil login di halaman pembuatan repository baru. Lanjut untuk menulis dokumentasi menggunakan Mkdocs perlu modul \u201cpip\u201d dan instalasi Python di komputer lokal, download dahulu di halaman https://www.python.org/downloads/ kemudian install sampai selesai. Setelah instalasi Python selesai \u201cpip\u201d sudah include dalam instalasi ini lalu untuk memasikan versinya buka CMD dengan akses Administrator ketik command pip \u2013version Versi pip sudah diketahui tebaru menggunakan 22.0 lanjut melakukan instalasi mkdocs dengan command pip install mkdocs tunggu prosesnya sampai selesai Untuk menulis dokumentasi test ini menggunakan Markdown perlu membuat project dahulu dengan perintah \u201cmkdocs new reza-sa\u201d dan bila sudah pergi ke direktori instalasi dengan perintah \u201ccd reza-sa\u201d karena lokasi file mkdocs saya berada di C:\\Users\\Reza\\reza-sa\\ Lanjut eksekusi untuk menjalankan mkdocs server di local dengan perintah \u201cmkdocs serve\u201d agar dapat diakses melalui browser Saat menulis panduan ini saya menggunakan aplikasi editor kode Visual Studio Code dengan tambahan plugin Markdown All in One agar memudahkan saat dokumentasi pekerjaan. Akses ssh ke vm dengan tabel akses default Port ssh 1 ke 192.168.1.89:2234 menggunakan aplikasi ssh/putty dan login menggunakan user/pass yang disediakan. Selanjutnya perlu cek pada interface pertama dari dhcp ke ip static, cek dahulu status device dan koneksi yang ada di vm ini dengan perintah \u201cip a\u201d , diketahui ada 1 koneksi terhubung via lan dengan -eth0- lalu saya mencatat bagian koneksi nomor 2 yaitu link/ether 0c:ca:7e:64:00:34 dalam notepad, sekali lagi lakukan perintah \u201cuuidgen eth0\u201d untuk generate user id yang diperlukan untuk seting ip static nantinya, 2 kotak merah dalam gambar digunakan untuk konfigurasi. Lanjut edit file konfigurasi network yang terletak di /etc/sysconfig/network-scripts/ifcfg-eth0 menggunakan view, dengan command \u201csudo vi /etc/sysconfig/network-scripts/ifcfg-eth0\u201d klik tombol i untuk insert/merubah isi teksnya isikan sesuai konfigurasi soal jika sudah ketik perintah \u201cwq!\u201d untuk save editor. Lanjut verifikasi file ifcfg-eth0 yang tadi sudah di edit dengan perintah \u201ccat /etc/sysconfig/network-scripts/ifcfg-eth0\u201d untuk memastikan file sudah benar dan tersimpan di VM. Lanjut melakukan restart service koneksi dengan perintah \u201csystemctl restart network\u201d masukan sandi user centos yang digunakan agar terverifikasi. Setelah melakukan langkah diatas koneksi ssh di putty akan terputus karena perubahan IP, lanjut kita login menggunakan port ssh2 192.168.1.89:2254 menggunakan putty kembali dan login menggunakan user centos untuk menyiapkan ssh authorized_keys. Setelah berhasil login biarkan saja dahulu, lanjut buka CMD lokal windows gunakan perintah \u201cssh-keygen -t rsa\u201d untuk membuat ssh key, disini saya mengkosongkan passphrase dengan tekan Enter semua sampai prosesnya selesai. Lanjut kita akan instal sshkey di server kembali ke putty lagi di langkah 11, ketika saya membuat direktori .ssh ternyata sudah ada di home centor, lalu saya rubah saja owner saja ke 700. Ternyata di VM ini untuk authorized keys sudah ada didalam folder .ssh maka tinggal edit filenya menggunakan vi dan masukan public key (isi dari id_rsa.pub) tadi dari direktori lokal (langkah 12) simpan kemudian pastikan file sudah benar dengan cek ulang perintah cat authorized_keys Lanjut ubah permision agar hanya dapat Read/Write saja dengan menggunakan perintah \u201cchmod 600 authorized_keys\u201d dan konfigurasi ssh keys sudah selesai. Test kembali akses login SSH di lokal, disini karena windows maka menggunakan CMD dengan perintah ssh -p2254 centos@192.168.1.89 jika muncul notifikasi fingerprint ketik yes saja dan berhasil login tanpa perlu password melalui CMD. Saya menggunakan CMD agar menyingkat waktu dibandingkan putty perlu seting dan memasukan private key dahulu di Putty nya. Sebelum melakukan instalasi Nginx perlu memastikan konfigurasi IP Private 1 dengan perintah perintah berikut dari CLI hasil akhir sudah bisa ping ke google.com Selanjutnya akan melakukan instalasi Nginx Server di VM ini, buat dahulu file konfigurasi dengan perintah \u201csudo vi /etc/yum.repos.d/nginx.repo\u201d dan isikan konfigurasi berikut dalam filenya: [nginx] name=nginx repo baseurl=http://nginx.org/packages/mainline/centos/7/$basearch/ gpgcheck=0 enabled=1 Lanjut melakukan instalasi nginx dengan menggunakan perintah \u201csudo yum install nginx\" dan tunggu prosesnya sampai selesai. Jika ada notifikasi tekan tombol y saja sampai prosesnya selesai seperti ini, pastikan semua sudah complete. Lanjut akan menjalankan service nginx dengan perintah \u201cservice nginx start\u201d lalu akan diminta sandi otentikasi masukan sandi user centos sampai complete. Jika sudah cek service nginx dengan perintah \u201cservice nginx status\u201d pastikan sudah hijau running tandanya nginx sudah berjalan dengan baik. Lanjut melakukan seting mod rewrite ke nginx webserver agar htaccess secara umum dapat digunakan karena teknisnya nginx berbeda dengan apache, maka edit file konfigurasi dengan perintah \u201csudo vi /etc/nginx/conf.d/default.conf\u201d lalu rubah bagian yang diblok ke: [nginx] name=nginx repo baseurl=http://nginx.org/packages/mainline/centos/7/$basearch/ gpgcheck=0 enabled=1 Menginstall versi php-fpm 7.3 dan 7.4 di webserver nginx-centos7 pertama membutuhkan epel repository, gunakan perintah \u201csudo yum install epel-release\u201d sampai selesai prosesnya. Proses selanjutnya melakukan instalasi remi repository dengan perintah \u201csudo yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm\u201d dan tunggu prosesnya sampai selesai. Jika sudah selesai lanjut instalasi paket yum-utils dengan menggunakan perintah \u201csudo yum install yum-utils\u201d dan tunggu proses sampai selesai. Lanjut mengaktifkan konfigurasi versi php yang dibutuhkan yaitu 7.3, 7.4, dan 8.0 menggunakan perintah berikut: sudo yum-config-manager --enable remi-php73 sudo yum-config-manager --enable remi-php74 sudo yum-config-manager --enable remi-php80 Setelah semua proses diatas selesai lanjut instalasi ekstensi php yang dibutuhkan dengan perintah berikut: sudo yum -y install php php-fpm php-mysqlnd php-zip php-devel php-gd php-mcrypt php-mbstring php-curl php-xml php-pear php-bcmath php-json php-pdo php-pecl-apcu php-pecl-apcu-devel Lanjut untuk proses konfigurasi php-fpm buka file /etc/php.ini lalu tambahkan baris cgi.fix_pathinfo=0 Lanjut buka file www.conf di direktori dengan perintah \u201csudo nano /etc/php-fpm.d/www.conf\u201d lalu rubah bagian: user = centos group = centos listen.owner = centos listen.group = centos Karena user saya pada VM ini menggunakan nama centos Jika sudah selesai lanjut kita akan menjalankan proses php-fpm di server dan juga saat boot secara otomatis, gunakan perintah ini: sudo systemctl start php-fpm sudo systemctl enable php-fpm Jika sudah cek status service php-fpm dengan perintah ini \u201csudo systemctl status php-fpm\u201d Seting IP interface kedua perlu menggunakan network manager, disini saya menggunakan nmtui dan pastikan sebelumnya sudah melakukan instalasi ntmui di VM ini. Ketik perintah nmtui untuk masuk e konfigurasi pilih Edit Connection. Ketika sudah masuk pilih menu Add, profile name dan device saya isikan eth1 dan IP Private kedua 172.16.8.54 simpan jika sudah. Lanjut saya mencoba konfigurasi file php info tambahan, setelah dicari direktori template website berada di /usr/share/nginx/html/ kemudian saya membuat file php info dengan mkdir folder baru php73/ dan mengisi script php info Test akses ke web direktori utama /usr/share/nginx/html sudah bisa tampil diakses dengan http://192.168.1.89:854/ sudah dapat tampil berikut Saat melakukan test akses direktori phpinfo /php73 ternyata koneksi RTO hasilnya, pengecekan melalui curl muncul hasil seperti ini: [idweb@remote ~]$ curl -I http://192.168.1.89:854/php73 HTTP/1.1 301 Moved Permanently Server: nginx/1.23.1 Date: Sat, 23 Jul 2022 14:20:30 GMT Content-Type: text/html Content-Length: 169 Location: http://192.168.1.89/php73/ Connection: keep-alive Port akses otomatis ter\u2019redirect ke non port 854 dengan eror 301, kemudian saya coba melakukan langkah selanjutnya dahulu untuk instalasi telnet-server. Gunakan perintah \u201csudo yum install telnet-server telnet\u201d Jika sudah lanjut instalasi firewalld agar dapat mengkonfigurasi dan membuka telnet port 23 agar dapat dilakukan akses secara menyeluruh. Gunakan perintah \u201csudo yum install telnet-server telnet\u201d tunggu prosesnya sampai selesai. Selanjutnya juga perlu instalasi firewall, gunakan perintah \u201csudo yum install firewalld\u201d tunggu sampai selesai prosesnya. Setelah instalasi selesai gunakan perintah ini untuk konfigurasi yang diperlukan. $ sudo systemctl start firewalld $ sudo systemctl enable firewalld $ sudo systemctl status firewalld Jika sudah gunakan perintah berikut untuk konfigurasi firewall port 80 dan akses telnet: $ sudo firewall-cmd --zone=public --add-port=80/tcp --permanent $ sudo firewall-cmd --reload $ sudo firewall-cmd --add-service=telnet --zone=public Test akses telnet menggunakan perintah \u201ctelnet 172.16.8.1 80\u201d hasilnya sudah terhubung. Install wget untuk mendownload file template menggunakan perintah \u201csudo yum install wget\u201d tunggu proses selesai, jika sudah pastikan berada di direktori /usr/share/nginx/html/ kemudian lanjut ketik perintah \u201csudo wget http://172.16.8.1/web.tar.gz\u201d Lanjut instalasi phpmyadmin dengan perintah \u201csudo yum install phpmyadmin\u201d tunggu sampai selesai prosesnya. Buat konfigurasi file symlink dengan perintah \u201csudo ln -s /usr/share/phpMyAdmin /usr/share/nginx/html/phpmyadmin\u201d agar file phpmyadmin dapat dijalankan. Symlink sudah dibuat lanjut restart php-fpm dengan perintah \u201csudo systemctl restart php-fpm\u201d Disini saya mencoba mengakses kembali phpmyadmin namun hasilnya tetap tidak bisa karena kemungkinan konfigurasi php konfig di nginx ada yang tidak sesuai, sudah dicoba untuk mod rewrite ulang dengan script yang benar masih belum memberikan hasil. Semua service pada server terlihat jalan dengan baik tanpa kendala. Namun jika diakses dengan subdir lain contoh /phpmyadmin selalu menghasilkan RTP dan hasil dari Curl 301 redirect. [idweb@remote ~]$ curl -I http://192.168.1.89:854/phpmyadmin HTTP/1.1 301 Moved Permanently Server: nginx/1.23.1 Date: Sun, 24 Jul 2022 04:06:56 GMT Content-Type: text/html Content-Length: 169 Location: http://192.168.1.89/phpmyadmin/ Connection: keep-alive Sampai saat ini saya mencoba mencari klue penyebabnya dan bertanya ke teman2 SA senior namun belum menemukan penyebab dan klue kendala berasal dari mana. Sekian hasil tes simulasi VM ini, terimakasih sudah memberi kesempatan untuk mencoba :)","title":"Reza Sysadmin 2022 | Nomor Soal 4"},{"location":"#reza-sysadmin-2022-nomor-soal-4","text":"Untuk mengerjakan soal kita perlu meyiapkan akun Github dahulu, daftar di halaman https://github.com/signup sampai berhasil login di halaman pembuatan repository baru. Lanjut untuk menulis dokumentasi menggunakan Mkdocs perlu modul \u201cpip\u201d dan instalasi Python di komputer lokal, download dahulu di halaman https://www.python.org/downloads/ kemudian install sampai selesai. Setelah instalasi Python selesai \u201cpip\u201d sudah include dalam instalasi ini lalu untuk memasikan versinya buka CMD dengan akses Administrator ketik command pip \u2013version Versi pip sudah diketahui tebaru menggunakan 22.0 lanjut melakukan instalasi mkdocs dengan command pip install mkdocs tunggu prosesnya sampai selesai Untuk menulis dokumentasi test ini menggunakan Markdown perlu membuat project dahulu dengan perintah \u201cmkdocs new reza-sa\u201d dan bila sudah pergi ke direktori instalasi dengan perintah \u201ccd reza-sa\u201d karena lokasi file mkdocs saya berada di C:\\Users\\Reza\\reza-sa\\ Lanjut eksekusi untuk menjalankan mkdocs server di local dengan perintah \u201cmkdocs serve\u201d agar dapat diakses melalui browser Saat menulis panduan ini saya menggunakan aplikasi editor kode Visual Studio Code dengan tambahan plugin Markdown All in One agar memudahkan saat dokumentasi pekerjaan. Akses ssh ke vm dengan tabel akses default Port ssh 1 ke 192.168.1.89:2234 menggunakan aplikasi ssh/putty dan login menggunakan user/pass yang disediakan. Selanjutnya perlu cek pada interface pertama dari dhcp ke ip static, cek dahulu status device dan koneksi yang ada di vm ini dengan perintah \u201cip a\u201d , diketahui ada 1 koneksi terhubung via lan dengan -eth0- lalu saya mencatat bagian koneksi nomor 2 yaitu link/ether 0c:ca:7e:64:00:34 dalam notepad, sekali lagi lakukan perintah \u201cuuidgen eth0\u201d untuk generate user id yang diperlukan untuk seting ip static nantinya, 2 kotak merah dalam gambar digunakan untuk konfigurasi. Lanjut edit file konfigurasi network yang terletak di /etc/sysconfig/network-scripts/ifcfg-eth0 menggunakan view, dengan command \u201csudo vi /etc/sysconfig/network-scripts/ifcfg-eth0\u201d klik tombol i untuk insert/merubah isi teksnya isikan sesuai konfigurasi soal jika sudah ketik perintah \u201cwq!\u201d untuk save editor. Lanjut verifikasi file ifcfg-eth0 yang tadi sudah di edit dengan perintah \u201ccat /etc/sysconfig/network-scripts/ifcfg-eth0\u201d untuk memastikan file sudah benar dan tersimpan di VM. Lanjut melakukan restart service koneksi dengan perintah \u201csystemctl restart network\u201d masukan sandi user centos yang digunakan agar terverifikasi. Setelah melakukan langkah diatas koneksi ssh di putty akan terputus karena perubahan IP, lanjut kita login menggunakan port ssh2 192.168.1.89:2254 menggunakan putty kembali dan login menggunakan user centos untuk menyiapkan ssh authorized_keys. Setelah berhasil login biarkan saja dahulu, lanjut buka CMD lokal windows gunakan perintah \u201cssh-keygen -t rsa\u201d untuk membuat ssh key, disini saya mengkosongkan passphrase dengan tekan Enter semua sampai prosesnya selesai. Lanjut kita akan instal sshkey di server kembali ke putty lagi di langkah 11, ketika saya membuat direktori .ssh ternyata sudah ada di home centor, lalu saya rubah saja owner saja ke 700. Ternyata di VM ini untuk authorized keys sudah ada didalam folder .ssh maka tinggal edit filenya menggunakan vi dan masukan public key (isi dari id_rsa.pub) tadi dari direktori lokal (langkah 12) simpan kemudian pastikan file sudah benar dengan cek ulang perintah cat authorized_keys Lanjut ubah permision agar hanya dapat Read/Write saja dengan menggunakan perintah \u201cchmod 600 authorized_keys\u201d dan konfigurasi ssh keys sudah selesai. Test kembali akses login SSH di lokal, disini karena windows maka menggunakan CMD dengan perintah ssh -p2254 centos@192.168.1.89 jika muncul notifikasi fingerprint ketik yes saja dan berhasil login tanpa perlu password melalui CMD. Saya menggunakan CMD agar menyingkat waktu dibandingkan putty perlu seting dan memasukan private key dahulu di Putty nya. Sebelum melakukan instalasi Nginx perlu memastikan konfigurasi IP Private 1 dengan perintah perintah berikut dari CLI hasil akhir sudah bisa ping ke google.com Selanjutnya akan melakukan instalasi Nginx Server di VM ini, buat dahulu file konfigurasi dengan perintah \u201csudo vi /etc/yum.repos.d/nginx.repo\u201d dan isikan konfigurasi berikut dalam filenya: [nginx] name=nginx repo baseurl=http://nginx.org/packages/mainline/centos/7/$basearch/ gpgcheck=0 enabled=1 Lanjut melakukan instalasi nginx dengan menggunakan perintah \u201csudo yum install nginx\" dan tunggu prosesnya sampai selesai. Jika ada notifikasi tekan tombol y saja sampai prosesnya selesai seperti ini, pastikan semua sudah complete. Lanjut akan menjalankan service nginx dengan perintah \u201cservice nginx start\u201d lalu akan diminta sandi otentikasi masukan sandi user centos sampai complete. Jika sudah cek service nginx dengan perintah \u201cservice nginx status\u201d pastikan sudah hijau running tandanya nginx sudah berjalan dengan baik. Lanjut melakukan seting mod rewrite ke nginx webserver agar htaccess secara umum dapat digunakan karena teknisnya nginx berbeda dengan apache, maka edit file konfigurasi dengan perintah \u201csudo vi /etc/nginx/conf.d/default.conf\u201d lalu rubah bagian yang diblok ke: [nginx] name=nginx repo baseurl=http://nginx.org/packages/mainline/centos/7/$basearch/ gpgcheck=0 enabled=1 Menginstall versi php-fpm 7.3 dan 7.4 di webserver nginx-centos7 pertama membutuhkan epel repository, gunakan perintah \u201csudo yum install epel-release\u201d sampai selesai prosesnya. Proses selanjutnya melakukan instalasi remi repository dengan perintah \u201csudo yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm\u201d dan tunggu prosesnya sampai selesai. Jika sudah selesai lanjut instalasi paket yum-utils dengan menggunakan perintah \u201csudo yum install yum-utils\u201d dan tunggu proses sampai selesai. Lanjut mengaktifkan konfigurasi versi php yang dibutuhkan yaitu 7.3, 7.4, dan 8.0 menggunakan perintah berikut: sudo yum-config-manager --enable remi-php73 sudo yum-config-manager --enable remi-php74 sudo yum-config-manager --enable remi-php80 Setelah semua proses diatas selesai lanjut instalasi ekstensi php yang dibutuhkan dengan perintah berikut: sudo yum -y install php php-fpm php-mysqlnd php-zip php-devel php-gd php-mcrypt php-mbstring php-curl php-xml php-pear php-bcmath php-json php-pdo php-pecl-apcu php-pecl-apcu-devel Lanjut untuk proses konfigurasi php-fpm buka file /etc/php.ini lalu tambahkan baris cgi.fix_pathinfo=0 Lanjut buka file www.conf di direktori dengan perintah \u201csudo nano /etc/php-fpm.d/www.conf\u201d lalu rubah bagian: user = centos group = centos listen.owner = centos listen.group = centos Karena user saya pada VM ini menggunakan nama centos Jika sudah selesai lanjut kita akan menjalankan proses php-fpm di server dan juga saat boot secara otomatis, gunakan perintah ini: sudo systemctl start php-fpm sudo systemctl enable php-fpm Jika sudah cek status service php-fpm dengan perintah ini \u201csudo systemctl status php-fpm\u201d Seting IP interface kedua perlu menggunakan network manager, disini saya menggunakan nmtui dan pastikan sebelumnya sudah melakukan instalasi ntmui di VM ini. Ketik perintah nmtui untuk masuk e konfigurasi pilih Edit Connection. Ketika sudah masuk pilih menu Add, profile name dan device saya isikan eth1 dan IP Private kedua 172.16.8.54 simpan jika sudah. Lanjut saya mencoba konfigurasi file php info tambahan, setelah dicari direktori template website berada di /usr/share/nginx/html/ kemudian saya membuat file php info dengan mkdir folder baru php73/ dan mengisi script php info Test akses ke web direktori utama /usr/share/nginx/html sudah bisa tampil diakses dengan http://192.168.1.89:854/ sudah dapat tampil berikut Saat melakukan test akses direktori phpinfo /php73 ternyata koneksi RTO hasilnya, pengecekan melalui curl muncul hasil seperti ini: [idweb@remote ~]$ curl -I http://192.168.1.89:854/php73 HTTP/1.1 301 Moved Permanently Server: nginx/1.23.1 Date: Sat, 23 Jul 2022 14:20:30 GMT Content-Type: text/html Content-Length: 169 Location: http://192.168.1.89/php73/ Connection: keep-alive Port akses otomatis ter\u2019redirect ke non port 854 dengan eror 301, kemudian saya coba melakukan langkah selanjutnya dahulu untuk instalasi telnet-server. Gunakan perintah \u201csudo yum install telnet-server telnet\u201d Jika sudah lanjut instalasi firewalld agar dapat mengkonfigurasi dan membuka telnet port 23 agar dapat dilakukan akses secara menyeluruh. Gunakan perintah \u201csudo yum install telnet-server telnet\u201d tunggu prosesnya sampai selesai. Selanjutnya juga perlu instalasi firewall, gunakan perintah \u201csudo yum install firewalld\u201d tunggu sampai selesai prosesnya. Setelah instalasi selesai gunakan perintah ini untuk konfigurasi yang diperlukan. $ sudo systemctl start firewalld $ sudo systemctl enable firewalld $ sudo systemctl status firewalld Jika sudah gunakan perintah berikut untuk konfigurasi firewall port 80 dan akses telnet: $ sudo firewall-cmd --zone=public --add-port=80/tcp --permanent $ sudo firewall-cmd --reload $ sudo firewall-cmd --add-service=telnet --zone=public Test akses telnet menggunakan perintah \u201ctelnet 172.16.8.1 80\u201d hasilnya sudah terhubung. Install wget untuk mendownload file template menggunakan perintah \u201csudo yum install wget\u201d tunggu proses selesai, jika sudah pastikan berada di direktori /usr/share/nginx/html/ kemudian lanjut ketik perintah \u201csudo wget http://172.16.8.1/web.tar.gz\u201d Lanjut instalasi phpmyadmin dengan perintah \u201csudo yum install phpmyadmin\u201d tunggu sampai selesai prosesnya. Buat konfigurasi file symlink dengan perintah \u201csudo ln -s /usr/share/phpMyAdmin /usr/share/nginx/html/phpmyadmin\u201d agar file phpmyadmin dapat dijalankan. Symlink sudah dibuat lanjut restart php-fpm dengan perintah \u201csudo systemctl restart php-fpm\u201d Disini saya mencoba mengakses kembali phpmyadmin namun hasilnya tetap tidak bisa karena kemungkinan konfigurasi php konfig di nginx ada yang tidak sesuai, sudah dicoba untuk mod rewrite ulang dengan script yang benar masih belum memberikan hasil. Semua service pada server terlihat jalan dengan baik tanpa kendala. Namun jika diakses dengan subdir lain contoh /phpmyadmin selalu menghasilkan RTP dan hasil dari Curl 301 redirect. [idweb@remote ~]$ curl -I http://192.168.1.89:854/phpmyadmin HTTP/1.1 301 Moved Permanently Server: nginx/1.23.1 Date: Sun, 24 Jul 2022 04:06:56 GMT Content-Type: text/html Content-Length: 169 Location: http://192.168.1.89/phpmyadmin/ Connection: keep-alive Sampai saat ini saya mencoba mencari klue penyebabnya dan bertanya ke teman2 SA senior namun belum menemukan penyebab dan klue kendala berasal dari mana. Sekian hasil tes simulasi VM ini, terimakasih sudah memberi kesempatan untuk mencoba :)","title":"Reza Sysadmin 2022 | Nomor Soal 4"}]}